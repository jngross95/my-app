{
  "stats": {
    "suites": 20,
    "tests": 115,
    "passes": 114,
    "pending": 0,
    "failures": 1,
    "start": "2021-07-25T13:12:02.297Z",
    "end": "2021-07-25T13:15:58.512Z",
    "duration": 94529,
    "testsRegistered": 115,
    "passPercent": 99.1304347826087,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "93e0e254-0a7c-4785-bc3a-18fe99265132",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/actions.spec.js",
      "file": "cypress/integration/2-advanced-examples/actions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9511a991-4388-4282-be2e-8476c3b600a9",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 5734,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email').type('fake@email.com').should('have.value', 'fake@email.com') // .type() with special character sequences\n.type('{leftarrow}{rightarrow}{uparrow}{downarrow}').type('{del}{selectall}{backspace}') // .type() with key modifiers\n.type('{alt}{option}') //these are equivalent\n.type('{ctrl}{control}') //these are equivalent\n.type('{meta}{command}{cmd}') //these are equivalent\n.type('{shift}') // Delay each keypress by 0.1 sec\n.type('slow.typing@email.com', {\n  delay: 100\n}).should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled') // Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type('disabled error checking', {\n  force: true\n}).should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "b481415b-5e94-4b44-b130-e47716b13502",
              "parentUUID": "9511a991-4388-4282-be2e-8476c3b600a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 556,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus().should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "06e26a6b-e2ab-4abb-842b-057779274cbd",
              "parentUUID": "9511a991-4388-4282-be2e-8476c3b600a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 588,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur').blur().should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "a5da9515-d6ec-4270-bef1-da3168bfae1c",
              "parentUUID": "9511a991-4388-4282-be2e-8476c3b600a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 871,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text').should('have.value', 'Clear this text').clear().should('have.value', '');",
              "err": {},
              "uuid": "c2f83fc2-4c7a-4e8d-b6d1-ed96cc801d64",
              "parentUUID": "9511a991-4388-4282-be2e-8476c3b600a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 506,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit().next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "a6383573-d0e8-4e3e-9cee-8a785d03fd32",
              "parentUUID": "9511a991-4388-4282-be2e-8476c3b600a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 3490,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click(); // You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight'); // .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas').click(80, 75) // click 80px on x coord and 75px on y coord\n.click(170, 75).click(80, 165).click(100, 185).click(125, 190).click(150, 185).click(170, 165); // click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({\n  multiple: true\n}); // Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({\n  force: true\n});",
              "err": {},
              "uuid": "d14c91d5-645b-463d-8587-844ea7307142",
              "parentUUID": "9511a991-4388-4282-be2e-8476c3b600a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 746,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick().should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "32428ae4-2e08-4137-8b14-017d2cb8a293",
              "parentUUID": "9511a991-4388-4282-be2e-8476c3b600a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 559,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick().should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "98b6d71b-5411-4cd5-b970-0a74316c68ee",
              "parentUUID": "9511a991-4388-4282-be2e-8476c3b600a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 1322,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check().should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').check().should('be.checked'); // .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check('radio1').should('be.checked'); // .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']).should('be.checked'); // Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]').check({\n  force: true\n}).should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').check('radio3', {\n  force: true\n}).should('be.checked');",
              "err": {},
              "uuid": "3c8b5018-7109-4c2b-bc27-f245946660a5",
              "parentUUID": "9511a991-4388-4282-be2e-8476c3b600a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 1379,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck().should('not.be.checked'); // .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check('checkbox1').uncheck('checkbox1').should('not.be.checked'); // .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']).uncheck(['checkbox1', 'checkbox3']).should('not.be.checked'); // Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]').uncheck({\n  force: true\n}).should('not.be.checked');",
              "err": {},
              "uuid": "231d7adb-b78f-4ddf-ae02-ce7140b08715",
              "parentUUID": "9511a991-4388-4282-be2e-8476c3b600a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 1490,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select').should('have.value', '--Select a fruit--'); // Select option(s) with matching text content\ncy.get('.action-select').select('apples'); // confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas']) // when getting multiple values, invoke \"val\" method first\n.invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas') // can attach an assertion right away to the element\n.should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']).invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // assert the selected values include oranges\ncy.get('.action-select-multiple').invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "9414bfcb-5c97-4d41-90d5-bb546e2d02db",
              "parentUUID": "9511a991-4388-4282-be2e-8476c3b600a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 289,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button').should('not.be.visible'); // scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView().should('be.visible');\ncy.get('#scroll-vertical button').should('not.be.visible'); // Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView().should('be.visible');\ncy.get('#scroll-both button').should('not.be.visible'); // Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView().should('be.visible');",
              "err": {},
              "uuid": "08eb7d2f-9502-4cc4-b39a-c42cc99aa3a7",
              "parentUUID": "9511a991-4388-4282-be2e-8476c3b600a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 362,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range').invoke('val', 25).trigger('change').get('input[type=range]').siblings('p').should('have.text', '25');",
              "err": {},
              "uuid": "b313b15a-c04e-4fe8-a9f3-906e104a3b54",
              "parentUUID": "9511a991-4388-4282-be2e-8476c3b600a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right'); // or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250); // or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%'); // control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', {\n  easing: 'linear'\n}); // control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', {\n  duration: 2000\n});",
              "err": {},
              "uuid": "4b2d614d-871d-4e83-9895-3c679c8b2e7d",
              "parentUUID": "9511a991-4388-4282-be2e-8476c3b600a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b481415b-5e94-4b44-b130-e47716b13502",
            "06e26a6b-e2ab-4abb-842b-057779274cbd",
            "a5da9515-d6ec-4270-bef1-da3168bfae1c",
            "c2f83fc2-4c7a-4e8d-b6d1-ed96cc801d64",
            "a6383573-d0e8-4e3e-9cee-8a785d03fd32",
            "d14c91d5-645b-463d-8587-844ea7307142",
            "32428ae4-2e08-4137-8b14-017d2cb8a293",
            "98b6d71b-5411-4cd5-b970-0a74316c68ee",
            "3c8b5018-7109-4c2b-bc27-f245946660a5",
            "231d7adb-b78f-4ddf-ae02-ce7140b08715",
            "9414bfcb-5c97-4d41-90d5-bb546e2d02db",
            "08eb7d2f-9502-4cc4-b39a-c42cc99aa3a7",
            "b313b15a-c04e-4fe8-a9f3-906e104a3b54",
            "4b2d614d-871d-4e83-9895-3c679c8b2e7d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20093,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7b396a85-9f47-41c8-8c52-a9802a952081",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/aliasing.spec.js",
      "file": "cypress/integration/2-advanced-examples/aliasing.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "26a016a9-b87d-4d65-a0fd-c522f1e09caa",
          "title": "Aliasing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".as() - alias a DOM element for later use",
              "fullTitle": "Aliasing .as() - alias a DOM element for later use",
              "timedOut": null,
              "duration": 817,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/as\n// Alias a DOM element for use later\n// We don't have to traverse to the element\n// later in our code, we reference it with @\ncy.get('.as-table').find('tbody>tr').first().find('td').first().find('button').as('firstBtn'); // when we reference the alias, we place an\n// @ in front of its name\ncy.get('@firstBtn').click();\ncy.get('@firstBtn').should('have.class', 'btn-success').and('contain', 'Changed');",
              "err": {},
              "uuid": "d55860d6-9451-47ba-9d03-4719ec538c51",
              "parentUUID": "26a016a9-b87d-4d65-a0fd-c522f1e09caa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".as() - alias a route for later use",
              "fullTitle": "Aliasing .as() - alias a route for later use",
              "timedOut": null,
              "duration": 1407,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Alias the route to wait for its response\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('eq', 200);",
              "err": {},
              "uuid": "7c685955-088c-49eb-8a4a-0b3bf00e7912",
              "parentUUID": "26a016a9-b87d-4d65-a0fd-c522f1e09caa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d55860d6-9451-47ba-9d03-4719ec538c51",
            "7c685955-088c-49eb-8a4a-0b3bf00e7912"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2224,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d5c34f05-f137-4342-a45e-40538da3b547",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/assertions.spec.js",
      "file": "cypress/integration/2-advanced-examples/assertions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "52e9949f-147d-48c0-97b8-4b493636b786",
          "title": "Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "db427909-fec5-45f1-afee-973db18b7e3e",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 790,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/should\ncy.get('.assertion-table').find('tbody tr:last').should('have.class', 'success').find('td').first() // checking the text of the <td> element in various ways\n.should('have.text', 'Column content').should('contain', 'Column content').should('have.html', 'Column content') // chai-jquery uses \"is()\" to check if element matches selector\n.should('match', 'td') // to match text content against a regular expression\n// first need to invoke jQuery method text()\n// and then match using regular expression\n.invoke('text').should('match', /column content/i); // a better way to check element's text content against a regular expression\n// is to use \"cy.contains\"\n// https://on.cypress.io/contains\ncy.get('.assertion-table').find('tbody tr:last') // finds first <td> element with text content matching regular expression\n.contains('td', /column content/i).should('be.visible'); // for more information about asserting element's text\n// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-element’s-text-contents",
                  "err": {},
                  "uuid": "b6c9d9c3-b85a-4b26-b049-4fc06e2f63a1",
                  "parentUUID": "db427909-fec5-45f1-afee-973db18b7e3e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 209,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/and\ncy.get('.assertions-link').should('have.class', 'active').and('have.attr', 'href').and('include', 'cypress.io');",
                  "err": {},
                  "uuid": "e7d17a35-63b9-4fe5-80d9-e63b4f74cce7",
                  "parentUUID": "db427909-fec5-45f1-afee-973db18b7e3e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b6c9d9c3-b85a-4b26-b049-4fc06e2f63a1",
                "e7d17a35-63b9-4fe5-80d9-e63b4f74cce7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 999,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "16a0ea6c-5faf-49ce-81fe-442b2e1f1525",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 141,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can use Chai's BDD style assertions\nexpect(true).to.be.true;\nconst o = {\n  foo: 'bar'\n};\nexpect(o).to.equal(o);\nexpect(o).to.deep.equal({\n  foo: 'bar'\n}); // matching text using regular expression\nexpect('FooBar').to.match(/bar$/i);",
                  "err": {},
                  "uuid": "902734ed-86dd-45a5-a375-eed133ea3d47",
                  "parentUUID": "16a0ea6c-5faf-49ce-81fe-442b2e1f1525",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 151,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Pass a function to should that can have any number\n// of explicit assertions within it.\n// The \".should(cb)\" function will be retried\n// automatically until it passes all your explicit assertions or times out.\ncy.get('.assertions-p').find('p').should($p => {\n  // https://on.cypress.io/$\n  // return an array of texts from all of the p's\n  // @ts-ignore TS6133 unused variable\n  const texts = $p.map((i, el) => Cypress.$(el).text()); // jquery map returns jquery object\n  // and .get() convert this to simple array\n  const paragraphs = texts.get(); // array should have length of 3\n  expect(paragraphs, 'has 3 paragraphs').to.have.length(3); // use second argument to expect(...) to provide clear\n  // message with each assertion\n  expect(paragraphs, 'has expected text in each paragraph').to.deep.eq(['Some text from first p', 'More text from second p', 'And even more text from third p']);\n});",
                  "err": {},
                  "uuid": "074a1fe1-c120-4115-8359-c690f2c43c70",
                  "parentUUID": "16a0ea6c-5faf-49ce-81fe-442b2e1f1525",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 171,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div') // .should(cb) callback function will be retried\n.should($div => {\n  expect($div).to.have.length(1);\n  const className = $div[0].className;\n  expect(className).to.match(/heading-/);\n}) // .then(cb) callback is not retried,\n// it either passes or fails\n.then($div => {\n  expect($div, 'text content').to.have.text('Introduction');\n});",
                  "err": {},
                  "uuid": "7d1c000f-3d3d-4584-a0a7-a2d9a0bfa2ab",
                  "parentUUID": "16a0ea6c-5faf-49ce-81fe-442b2e1f1525",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 174,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div').should($div => {\n  if ($div.length !== 1) {\n    // you can throw your own errors\n    throw new Error('Did not find 1 element');\n  }\n  const className = $div[0].className;\n  if (!className.match(/heading-/)) {\n    throw new Error(`Could not find class \"heading-\" in ${className}`);\n  }\n});",
                  "err": {},
                  "uuid": "2f91dc7d-a9d6-4ad5-b6ec-c6d3e6354834",
                  "parentUUID": "16a0ea6c-5faf-49ce-81fe-442b2e1f1525",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 217,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/**\n * Text from the first element.\n * @type {string}\n*/\nlet text;\n/**\n * Normalizes passed text,\n * useful before comparing text with spaces and different capitalization.\n * @param {string} s Text to normalize\n*/\nconst normalizeText = s => s.replace(/\\s/g, '').toLowerCase();\ncy.get('.two-elements').find('.first').then($first => {\n  // save text from the first element\n  text = normalizeText($first.text());\n});\ncy.get('.two-elements').find('.second').should($div => {\n  // we can massage text before comparing\n  const secondText = normalizeText($div.text());\n  expect(secondText, 'second text').to.equal(text);\n});",
                  "err": {},
                  "uuid": "4e006525-3744-407a-bdcb-f7c99fdbcd8e",
                  "parentUUID": "16a0ea6c-5faf-49ce-81fe-442b2e1f1525",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 157,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const person = {\n  name: 'Joe',\n  age: 20\n};\nassert.isObject(person, 'value is object');",
                  "err": {},
                  "uuid": "c75e7ed0-40e3-43a6-bab4-cbbcacecfc34",
                  "parentUUID": "16a0ea6c-5faf-49ce-81fe-442b2e1f1525",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retries the should callback until assertions pass",
                  "fullTitle": "Assertions Explicit Assertions retries the should callback until assertions pass",
                  "timedOut": null,
                  "duration": 1630,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('#random-number').should($div => {\n  const n = parseFloat($div.text());\n  expect(n).to.be.gte(1).and.be.lte(10);\n});",
                  "err": {},
                  "uuid": "abf72007-bb40-48b7-a800-2f209b0da033",
                  "parentUUID": "16a0ea6c-5faf-49ce-81fe-442b2e1f1525",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "902734ed-86dd-45a5-a375-eed133ea3d47",
                "074a1fe1-c120-4115-8359-c690f2c43c70",
                "7d1c000f-3d3d-4584-a0a7-a2d9a0bfa2ab",
                "2f91dc7d-a9d6-4ad5-b6ec-c6d3e6354834",
                "4e006525-3744-407a-bdcb-f7c99fdbcd8e",
                "c75e7ed0-40e3-43a6-bab4-cbbcacecfc34",
                "abf72007-bb40-48b7-a800-2f209b0da033"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2641,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "10854054-7ab4-4075-885e-29658861aac5",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/connectors.spec.js",
      "file": "cypress/integration/2-advanced-examples/connectors.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "555f7a2c-306c-4ec6-91f8-a51659234294",
          "title": "Connectors",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".each() - iterate over an array of elements",
              "fullTitle": "Connectors .each() - iterate over an array of elements",
              "timedOut": null,
              "duration": 707,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/each\ncy.get('.connectors-each-ul>li').each(($el, index, $list) => {\n  console.log($el, index, $list);\n});",
              "err": {},
              "uuid": "75a7ecee-fd3c-452d-acf9-409dbd2d0eb2",
              "parentUUID": "555f7a2c-306c-4ec6-91f8-a51659234294",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".its() - get properties on the current subject",
              "fullTitle": "Connectors .its() - get properties on the current subject",
              "timedOut": null,
              "duration": 376,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/its\ncy.get('.connectors-its-ul>li') // calls the 'length' property yielding that value\n.its('length').should('be.gt', 2);",
              "err": {},
              "uuid": "a251f380-ea87-4efb-9c9f-b9851cc46c00",
              "parentUUID": "555f7a2c-306c-4ec6-91f8-a51659234294",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".invoke() - invoke a function on the current subject",
              "fullTitle": "Connectors .invoke() - invoke a function on the current subject",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// our div is hidden in our script.js\n// $('.connectors-div').hide()\n// https://on.cypress.io/invoke\ncy.get('.connectors-div').should('be.hidden') // call the jquery method 'show' on the 'div.container'\n.invoke('show').should('be.visible');",
              "err": {},
              "uuid": "521d45ed-9e93-4369-a8f1-f948cf09e257",
              "parentUUID": "555f7a2c-306c-4ec6-91f8-a51659234294",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".spread() - spread an array as individual args to callback function",
              "fullTitle": "Connectors .spread() - spread an array as individual args to callback function",
              "timedOut": null,
              "duration": 357,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spread\nconst arr = ['foo', 'bar', 'baz'];\ncy.wrap(arr).spread((foo, bar, baz) => {\n  expect(foo).to.eq('foo');\n  expect(bar).to.eq('bar');\n  expect(baz).to.eq('baz');\n});",
              "err": {},
              "uuid": "552f6991-1363-48a6-b106-699cfd0deb58",
              "parentUUID": "555f7a2c-306c-4ec6-91f8-a51659234294",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "369da64f-66fc-49e4-8711-d0c634f8275f",
              "title": ".then()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes a callback function with the current subject",
                  "fullTitle": "Connectors .then() invokes a callback function with the current subject",
                  "timedOut": null,
                  "duration": 180,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/then\ncy.get('.connectors-list > li').then($lis => {\n  expect($lis, '3 items').to.have.length(3);\n  expect($lis.eq(0), 'first item').to.contain('Walk the dog');\n  expect($lis.eq(1), 'second item').to.contain('Feed the cat');\n  expect($lis.eq(2), 'third item').to.contain('Write JavaScript');\n});",
                  "err": {},
                  "uuid": "7c5d5825-bcc5-43ab-ae7d-aec78887ead7",
                  "parentUUID": "369da64f-66fc-49e4-8711-d0c634f8275f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the returned value to the next command",
                  "fullTitle": "Connectors .then() yields the returned value to the next command",
                  "timedOut": null,
                  "duration": 150,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1);\n  return 2;\n}).then(num => {\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "7b112302-2181-43c1-a039-8314f2cc5540",
                  "parentUUID": "369da64f-66fc-49e4-8711-d0c634f8275f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the original subject without return",
                  "fullTitle": "Connectors .then() yields the original subject without return",
                  "timedOut": null,
                  "duration": 168,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1); // note that nothing is returned from this callback\n}).then(num => {\n  // this callback receives the original unchanged value 1\n  expect(num).to.equal(1);\n});",
                  "err": {},
                  "uuid": "5237426b-07d8-4b44-a74e-99cbea2fded0",
                  "parentUUID": "369da64f-66fc-49e4-8711-d0c634f8275f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the value yielded by the last Cypress command inside",
                  "fullTitle": "Connectors .then() yields the value yielded by the last Cypress command inside",
                  "timedOut": null,
                  "duration": 152,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1); // note how we run a Cypress command\n  // the result yielded by this Cypress command\n  // will be passed to the second \".then\"\n  cy.wrap(2);\n}).then(num => {\n  // this callback receives the value yielded by \"cy.wrap(2)\"\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "f4726f6e-83c9-4ae6-840f-7c7ea4b02280",
                  "parentUUID": "369da64f-66fc-49e4-8711-d0c634f8275f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7c5d5825-bcc5-43ab-ae7d-aec78887ead7",
                "7b112302-2181-43c1-a039-8314f2cc5540",
                "5237426b-07d8-4b44-a74e-99cbea2fded0",
                "f4726f6e-83c9-4ae6-840f-7c7ea4b02280"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 650,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "75a7ecee-fd3c-452d-acf9-409dbd2d0eb2",
            "a251f380-ea87-4efb-9c9f-b9851cc46c00",
            "521d45ed-9e93-4369-a8f1-f948cf09e257",
            "552f6991-1363-48a6-b106-699cfd0deb58"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1576,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b4ff59dd-1916-4b06-a6e2-c241bed6de66",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/cookies.spec.js",
      "file": "cypress/integration/2-advanced-examples/cookies.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "173abff2-aa45-4062-9bff-085f97f903ed",
          "title": "Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.getCookie() - get a browser cookie",
              "fullTitle": "Cookies cy.getCookie() - get a browser cookie",
              "timedOut": null,
              "duration": 1174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookie\ncy.get('#getCookie .set-a-cookie').click(); // cy.getCookie() yields a cookie object\ncy.getCookie('token').should('have.property', 'value', '123ABC');",
              "err": {},
              "uuid": "3a8d898b-1243-4a22-b68e-67fc9a3bc48b",
              "parentUUID": "173abff2-aa45-4062-9bff-085f97f903ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getCookies() - get browser cookies",
              "fullTitle": "Cookies cy.getCookies() - get browser cookies",
              "timedOut": null,
              "duration": 546,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookies\ncy.getCookies().should('be.empty');\ncy.get('#getCookies .set-a-cookie').click(); // cy.getCookies() yields an array of cookies\ncy.getCookies().should('have.length', 1).should(cookies => {\n  // each cookie has these properties\n  expect(cookies[0]).to.have.property('name', 'token');\n  expect(cookies[0]).to.have.property('value', '123ABC');\n  expect(cookies[0]).to.have.property('httpOnly', false);\n  expect(cookies[0]).to.have.property('secure', false);\n  expect(cookies[0]).to.have.property('domain');\n  expect(cookies[0]).to.have.property('path');\n});",
              "err": {},
              "uuid": "18d648dd-ffed-41dc-bb0e-10ec8a73d7cd",
              "parentUUID": "173abff2-aa45-4062-9bff-085f97f903ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.setCookie() - set a browser cookie",
              "fullTitle": "Cookies cy.setCookie() - set a browser cookie",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/setcookie\ncy.getCookies().should('be.empty');\ncy.setCookie('foo', 'bar'); // cy.getCookie() yields a cookie object\ncy.getCookie('foo').should('have.property', 'value', 'bar');",
              "err": {},
              "uuid": "c3e8d902-979e-4618-8e91-ba04b3569365",
              "parentUUID": "173abff2-aa45-4062-9bff-085f97f903ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookie() - clear a browser cookie",
              "fullTitle": "Cookies cy.clearCookie() - clear a browser cookie",
              "timedOut": null,
              "duration": 285,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookie\ncy.getCookie('token').should('be.null');\ncy.get('#clearCookie .set-a-cookie').click();\ncy.getCookie('token').should('have.property', 'value', '123ABC'); // cy.clearCookies() yields null\ncy.clearCookie('token').should('be.null');\ncy.getCookie('token').should('be.null');",
              "err": {},
              "uuid": "39d5fbdd-1ac7-4de8-8a6a-bed4d45ac069",
              "parentUUID": "173abff2-aa45-4062-9bff-085f97f903ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookies() - clear browser cookies",
              "fullTitle": "Cookies cy.clearCookies() - clear browser cookies",
              "timedOut": null,
              "duration": 510,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookies\ncy.getCookies().should('be.empty');\ncy.get('#clearCookies .set-a-cookie').click();\ncy.getCookies().should('have.length', 1); // cy.clearCookies() yields null\ncy.clearCookies();\ncy.getCookies().should('be.empty');",
              "err": {},
              "uuid": "14a26715-2e00-4720-92e4-ef6bec113f82",
              "parentUUID": "173abff2-aa45-4062-9bff-085f97f903ed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3a8d898b-1243-4a22-b68e-67fc9a3bc48b",
            "18d648dd-ffed-41dc-bb0e-10ec8a73d7cd",
            "c3e8d902-979e-4618-8e91-ba04b3569365",
            "39d5fbdd-1ac7-4de8-8a6a-bed4d45ac069",
            "14a26715-2e00-4720-92e4-ef6bec113f82"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2655,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b85b8828-26a6-4419-8546-c961befe65ef",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/cypress_api.spec.js",
      "file": "cypress/integration/2-advanced-examples/cypress_api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bdeaee75-8d4d-4f23-bdeb-9279a14b128b",
          "title": "Cypress.Commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".add() - create a custom command",
              "fullTitle": "Cypress.Commands .add() - create a custom command",
              "timedOut": null,
              "duration": 1754,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Commands.add('console', {\n  prevSubject: true\n}, (subject, method) => {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || 'log'; // log the subject to the console\n  // @ts-ignore TS7017\n  console[method]('The subject is', subject); // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n}); // @ts-ignore TS2339\ncy.get('button').console('info').then($button => {// subject is still $button\n});",
              "err": {},
              "uuid": "31864c1d-1490-4277-874d-53b0ec188625",
              "parentUUID": "bdeaee75-8d4d-4f23-bdeb-9279a14b128b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "31864c1d-1490-4277-874d-53b0ec188625"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1754,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0d2c3666-495e-480e-97fe-3ca5ab6493e7",
          "title": "Cypress.Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".debug() - enable or disable debugging",
              "fullTitle": "Cypress.Cookies .debug() - enable or disable debugging",
              "timedOut": null,
              "duration": 256,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Cookies.debug(true); // Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
              "err": {},
              "uuid": "2cb294e1-0831-45aa-bcdf-8654f45b3b67",
              "parentUUID": "0d2c3666-495e-480e-97fe-3ca5ab6493e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".preserveOnce() - preserve cookies by key",
              "fullTitle": "Cypress.Cookies .preserveOnce() - preserve cookies by key",
              "timedOut": null,
              "duration": 186,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// normally cookies are reset after each test\ncy.getCookie('fakeCookie').should('not.be.ok'); // preserving a cookie will not clear it when\n// the next test starts\ncy.setCookie('lastCookie', '789XYZ');\nCypress.Cookies.preserveOnce('lastCookie');",
              "err": {},
              "uuid": "74f66ae0-fbc7-48f9-acbf-e7d7d5aca886",
              "parentUUID": "0d2c3666-495e-480e-97fe-3ca5ab6493e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".defaults() - set defaults for all cookies",
              "fullTitle": "Cypress.Cookies .defaults() - set defaults for all cookies",
              "timedOut": null,
              "duration": 214,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// now any cookie with the name 'session_id' will\n// not be cleared before each new test runs\nCypress.Cookies.defaults({\n  preserve: 'session_id'\n});",
              "err": {},
              "uuid": "c204352d-6e16-4f85-8505-31f6c4261f35",
              "parentUUID": "0d2c3666-495e-480e-97fe-3ca5ab6493e7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2cb294e1-0831-45aa-bcdf-8654f45b3b67",
            "74f66ae0-fbc7-48f9-acbf-e7d7d5aca886",
            "c204352d-6e16-4f85-8505-31f6c4261f35"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 656,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c836fa1b-a696-483b-9d73-738b3d98b493",
          "title": "Cypress.arch",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get CPU architecture name of underlying OS",
              "fullTitle": "Cypress.arch Get CPU architecture name of underlying OS",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
              "err": {},
              "uuid": "330a541d-5135-4a7a-9261-db84e7aae4b0",
              "parentUUID": "c836fa1b-a696-483b-9d73-738b3d98b493",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "330a541d-5135-4a7a-9261-db84e7aae4b0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 162,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a8514c9b-833e-404f-a3f1-f4963ad1b4d0",
          "title": "Cypress.config()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get and set configuration options",
              "fullTitle": "Cypress.config() Get and set configuration options",
              "timedOut": null,
              "duration": 447,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/config\nlet myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000); // this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
              "err": {},
              "uuid": "c1c86d8d-6238-472c-8841-afe9e2f2ac3d",
              "parentUUID": "a8514c9b-833e-404f-a3f1-f4963ad1b4d0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c1c86d8d-6238-472c-8841-afe9e2f2ac3d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 447,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3b42dc0d-ed5a-4d82-a950-bd15c4257217",
          "title": "Cypress.dom",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".isHidden() - determine if a DOM element is hidden",
              "fullTitle": "Cypress.dom .isHidden() - determine if a DOM element is hidden",
              "timedOut": null,
              "duration": 424,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nlet visibleP = Cypress.$('.dom-p p.visible').get(0); // our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be.true;\nexpect(Cypress.dom.isHidden(visibleP)).to.be.false;",
              "err": {},
              "uuid": "80059e0d-f8c3-41e2-b48f-be97ae2b84f6",
              "parentUUID": "3b42dc0d-ed5a-4d82-a950-bd15c4257217",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "80059e0d-f8c3-41e2-b48f-be97ae2b84f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 424,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "55e3857d-a4e8-4fff-b1b0-5a38a43126b7",
          "title": "Cypress.env()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get environment variables",
              "fullTitle": "Cypress.env() Get environment variables",
              "timedOut": null,
              "duration": 154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n}); // get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local'); // set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/'); // get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
              "err": {},
              "uuid": "cb674c0b-69d7-49da-951c-7f153b27d058",
              "parentUUID": "55e3857d-a4e8-4fff-b1b0-5a38a43126b7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cb674c0b-69d7-49da-951c-7f153b27d058"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 154,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "124277d2-e29d-4c47-8f8c-91462b01febb",
          "title": "Cypress.log",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Control what is printed to the Command Log",
              "fullTitle": "Cypress.log Control what is printed to the Command Log",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/cypress-log",
              "err": {},
              "uuid": "be5c64d8-f008-4fc6-b3d2-82a43abef79d",
              "parentUUID": "124277d2-e29d-4c47-8f8c-91462b01febb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be5c64d8-f008-4fc6-b3d2-82a43abef79d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 161,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d513ea0b-10b9-4a00-9013-63a495dfa70d",
          "title": "Cypress.platform",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get underlying OS name",
              "fullTitle": "Cypress.platform Get underlying OS name",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
              "err": {},
              "uuid": "dd4f2b8a-bf5a-4f35-bebd-502b81292b25",
              "parentUUID": "d513ea0b-10b9-4a00-9013-63a495dfa70d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dd4f2b8a-bf5a-4f35-bebd-502b81292b25"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 131,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "db23ae6a-1075-40b7-b9da-aee205e61c3d",
          "title": "Cypress.version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current version of Cypress being run",
              "fullTitle": "Cypress.version Get current version of Cypress being run",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
              "err": {},
              "uuid": "5bcd9733-f239-4aa4-a673-2710929f1b4e",
              "parentUUID": "db23ae6a-1075-40b7-b9da-aee205e61c3d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5bcd9733-f239-4aa4-a673-2710929f1b4e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 174,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "292552dc-36cd-477d-853c-2f817844f27d",
          "title": "Cypress.spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current spec information",
              "fullTitle": "Cypress.spec Get current spec information",
              "timedOut": null,
              "duration": 253,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
              "err": {},
              "uuid": "cfeda810-a741-4958-a638-76f7f146f813",
              "parentUUID": "292552dc-36cd-477d-853c-2f817844f27d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cfeda810-a741-4958-a638-76f7f146f813"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 253,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d53f6ba1-9ef9-45e4-85b9-b24d899a35e8",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/files.spec.js",
      "file": "cypress/integration/2-advanced-examples/files.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6500f9f7-acda-48b3-b8cb-904427f03e1d",
          "title": "Files",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.fixture() - load a fixture",
              "fullTitle": "Files cy.fixture() - load a fixture",
              "timedOut": null,
              "duration": 1181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/fixture\n// Instead of writing a response inline you can\n// use a fixture file's content.\n// when application makes an Ajax request matching \"GET **/comments/*\"\n// Cypress will intercept it and reply with the object in `example.json` fixture\ncy.intercept('GET', '**/comments/*', {\n  fixture: 'example.json'\n}).as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.fixture-btn').click();\ncy.wait('@getComment').its('response.body').should('have.property', 'name').and('include', 'Using fixtures to represent data');",
              "err": {},
              "uuid": "805142e9-d054-4200-9b80-5986941d88fe",
              "parentUUID": "6500f9f7-acda-48b3-b8cb-904427f03e1d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.fixture() or require - load a fixture",
              "fullTitle": "Files cy.fixture() or require - load a fixture",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// we are inside the \"function () { ... }\"\n// callback and can use test context object \"this\"\n// \"this.example\" was loaded in \"beforeEach\" function callback\nexpect(this.example, 'fixture in the test context').to.deep.equal(requiredExample); // or use \"cy.wrap\" and \"should('deep.equal', ...)\" assertion\ncy.wrap(this.example).should('deep.equal', requiredExample);",
              "err": {},
              "uuid": "f4d373d5-2c65-4ea1-837c-d24e3c8130b7",
              "parentUUID": "6500f9f7-acda-48b3-b8cb-904427f03e1d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.readFile() - read file contents",
              "fullTitle": "Files cy.readFile() - read file contents",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/readfile\n// You can read a file and yield its contents\n// The filePath is relative to your project's root.\ncy.readFile('cypress.json').then(json => {\n  expect(json).to.be.an('object');\n});",
              "err": {},
              "uuid": "a5ae3841-01db-4e4c-b7e6-887588b94dc5",
              "parentUUID": "6500f9f7-acda-48b3-b8cb-904427f03e1d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.writeFile() - write to a file",
              "fullTitle": "Files cy.writeFile() - write to a file",
              "timedOut": null,
              "duration": 577,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/writefile\n// You can write to a file\n// Use a response from a request to automatically\n// generate a fixture file for use later\ncy.request('https://jsonplaceholder.cypress.io/users').then(response => {\n  cy.writeFile('cypress/fixtures/users.json', response.body);\n});\ncy.fixture('users').should(users => {\n  expect(users[0].name).to.exist;\n}); // JavaScript arrays and objects are stringified\n// and formatted into text.\ncy.writeFile('cypress/fixtures/profile.json', {\n  id: 8739,\n  name: 'Jane',\n  email: 'jane@example.com'\n});\ncy.fixture('profile').should(profile => {\n  expect(profile.name).to.eq('Jane');\n});",
              "err": {},
              "uuid": "40bdf3a8-836f-4b61-a7bf-ee1713f129b5",
              "parentUUID": "6500f9f7-acda-48b3-b8cb-904427f03e1d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "805142e9-d054-4200-9b80-5986941d88fe",
            "f4d373d5-2c65-4ea1-837c-d24e3c8130b7",
            "a5ae3841-01db-4e4c-b7e6-887588b94dc5",
            "40bdf3a8-836f-4b61-a7bf-ee1713f129b5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2090,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "eb3f68b0-421d-4cd9-a533-ebf64fa9a71a",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/local_storage.spec.js",
      "file": "cypress/integration/2-advanced-examples/local_storage.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2a28aa47-3e5f-4459-bfcc-eda05be4f267",
          "title": "Local Storage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.clearLocalStorage() - clear all data in local storage",
              "fullTitle": "Local Storage cy.clearLocalStorage() - clear all data in local storage",
              "timedOut": null,
              "duration": 1712,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearlocalstorage\ncy.get('.ls-btn').click().should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n}); // clearLocalStorage() yields the localStorage object\ncy.clearLocalStorage().should(ls => {\n  expect(ls.getItem('prop1')).to.be.null;\n  expect(ls.getItem('prop2')).to.be.null;\n  expect(ls.getItem('prop3')).to.be.null;\n});\ncy.get('.ls-btn').click().should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n}); // Clear key matching string in Local Storage\ncy.clearLocalStorage('prop1').should(ls => {\n  expect(ls.getItem('prop1')).to.be.null;\n  expect(ls.getItem('prop2')).to.eq('blue');\n  expect(ls.getItem('prop3')).to.eq('magenta');\n});\ncy.get('.ls-btn').click().should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n}); // Clear keys matching regex in Local Storage\ncy.clearLocalStorage(/prop1|2/).should(ls => {\n  expect(ls.getItem('prop1')).to.be.null;\n  expect(ls.getItem('prop2')).to.be.null;\n  expect(ls.getItem('prop3')).to.eq('magenta');\n});",
              "err": {},
              "uuid": "67d78365-6c6b-462e-aa74-55b0f0265fc6",
              "parentUUID": "2a28aa47-3e5f-4459-bfcc-eda05be4f267",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "67d78365-6c6b-462e-aa74-55b0f0265fc6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1712,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0ef4f726-6140-48af-9ba9-8c3e04ce7b5c",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/location.spec.js",
      "file": "cypress/integration/2-advanced-examples/location.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0d1c2175-064d-4cd4-9f5e-662947654d99",
          "title": "Location",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.hash() - get the current URL hash",
              "fullTitle": "Location cy.hash() - get the current URL hash",
              "timedOut": null,
              "duration": 946,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/hash\ncy.hash().should('be.empty');",
              "err": {},
              "uuid": "49b46b00-d9ef-4fc1-8ddd-28bf07e92ddb",
              "parentUUID": "0d1c2175-064d-4cd4-9f5e-662947654d99",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.location() - get window.location",
              "fullTitle": "Location cy.location() - get window.location",
              "timedOut": null,
              "duration": 138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/location\ncy.location().should(location => {\n  expect(location.hash).to.be.empty;\n  expect(location.href).to.eq('https://example.cypress.io/commands/location');\n  expect(location.host).to.eq('example.cypress.io');\n  expect(location.hostname).to.eq('example.cypress.io');\n  expect(location.origin).to.eq('https://example.cypress.io');\n  expect(location.pathname).to.eq('/commands/location');\n  expect(location.port).to.eq('');\n  expect(location.protocol).to.eq('https:');\n  expect(location.search).to.be.empty;\n});",
              "err": {},
              "uuid": "80085893-ff0b-4db7-9b1c-90005ad34ccf",
              "parentUUID": "0d1c2175-064d-4cd4-9f5e-662947654d99",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.url() - get the current URL",
              "fullTitle": "Location cy.url() - get the current URL",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/url\ncy.url().should('eq', 'https://example.cypress.io/commands/location');",
              "err": {},
              "uuid": "aa013ae1-8e8d-494f-8475-4021aadfe594",
              "parentUUID": "0d1c2175-064d-4cd4-9f5e-662947654d99",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "49b46b00-d9ef-4fc1-8ddd-28bf07e92ddb",
            "80085893-ff0b-4db7-9b1c-90005ad34ccf",
            "aa013ae1-8e8d-494f-8475-4021aadfe594"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1245,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f2922493-6d53-4f54-a909-af27d2583602",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/misc.spec.js",
      "file": "cypress/integration/2-advanced-examples/misc.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ab1c4bc4-db3b-486b-aa76-459846f9da42",
          "title": "Misc",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".end() - end the command chain",
              "fullTitle": "Misc .end() - end the command chain",
              "timedOut": null,
              "duration": 1512,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/end\n// cy.end is useful when you want to end a chain of commands\n// and force Cypress to re-query from the root element\ncy.get('.misc-table').within(() => {\n  // ends the current chain and yields null\n  cy.contains('Cheryl').click().end(); // queries the entire table again\n  cy.contains('Charles').click();\n});",
              "err": {},
              "uuid": "10458a61-5622-4f62-9777-6e2b78bddc7e",
              "parentUUID": "ab1c4bc4-db3b-486b-aa76-459846f9da42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.exec() - execute a system command",
              "fullTitle": "Misc cy.exec() - execute a system command",
              "timedOut": null,
              "duration": 625,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// execute a system command.\n// so you can take actions necessary for\n// your test outside the scope of Cypress.\n// https://on.cypress.io/exec\n// we can use Cypress.platform string to\n// select appropriate command\n// https://on.cypress/io/platform\ncy.log(`Platform ${Cypress.platform} architecture ${Cypress.arch}`); // on CircleCI Windows build machines we have a failure to run bash shell\n// https://github.com/cypress-io/cypress/issues/5169\n// so skip some of the tests by passing flag \"--env circle=true\"\nconst isCircleOnWindows = Cypress.platform === 'win32' && Cypress.env('circle');\nif (isCircleOnWindows) {\n  cy.log('Skipping test on CircleCI');\n  return;\n} // cy.exec problem on Shippable CI\n// https://github.com/cypress-io/cypress/issues/6718\n\nconst isShippable = Cypress.platform === 'linux' && Cypress.env('shippable');\nif (isShippable) {\n  cy.log('Skipping test on ShippableCI');\n  return;\n}\ncy.exec('echo Jane Lane').its('stdout').should('contain', 'Jane Lane');\nif (Cypress.platform === 'win32') {\n  cy.exec('print cypress.json').its('stderr').should('be.empty');\n} else {\n  cy.exec('cat cypress.json').its('stderr').should('be.empty');\n  cy.exec('pwd').its('code').should('eq', 0);\n}",
              "err": {
                "message": "CypressError: `cy.exec('echo Jane Lane')` failed because the command exited with a non-zero code.\n\nPass `{failOnNonZeroExit: false}` to ignore exit code failures.\n\nInformation about the failure:\nCode: 127\n\nStderr:\n/c/Program: Files\\Git\\usr\\bin\\bash.exe: No such file or directory\n\nhttps://on.cypress.io/exec",
                "estack": "CypressError: `cy.exec('echo Jane Lane')` failed because the command exited with a non-zero code.\n\nPass `{failOnNonZeroExit: false}` to ignore exit code failures.\n\nInformation about the failure:\nCode: 127\n\nStderr:\n/c/Program: Files\\Git\\usr\\bin\\bash.exe: No such file or directory\n\nhttps://on.cypress.io/exec\n    at https://example.cypress.io/__cypress/runner/cypress_runner.js:138884:26\n    at tryCatcher (https://example.cypress.io/__cypress/runner/cypress_runner.js:10798:23)\n    at Promise._settlePromiseFromHandler (https://example.cypress.io/__cypress/runner/cypress_runner.js:8733:31)\n    at Promise._settlePromise (https://example.cypress.io/__cypress/runner/cypress_runner.js:8790:18)\n    at Promise._settlePromise0 (https://example.cypress.io/__cypress/runner/cypress_runner.js:8835:10)\n    at Promise._settlePromises (https://example.cypress.io/__cypress/runner/cypress_runner.js:8915:18)\n    at _drainQueueStep (https://example.cypress.io/__cypress/runner/cypress_runner.js:5505:12)\n    at _drainQueue (https://example.cypress.io/__cypress/runner/cypress_runner.js:5498:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://example.cypress.io/__cypress/runner/cypress_runner.js:5514:5)\n    at Async.drainQueues (https://example.cypress.io/__cypress/runner/cypress_runner.js:5384:14)\nFrom Your Spec Code:\n    at Context.eval (https://example.cypress.io/__cypress/tests?p=cypress\\integration\\2-advanced-examples\\misc.spec.js:143:8)",
                "diff": null
              },
              "uuid": "830a0fcc-dc16-4919-bcef-182dcb8ee12c",
              "parentUUID": "ab1c4bc4-db3b-486b-aa76-459846f9da42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.focused() - get the DOM element that has focus",
              "fullTitle": "Misc cy.focused() - get the DOM element that has focus",
              "timedOut": null,
              "duration": 407,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focused\ncy.get('.misc-form').find('#name').click();\ncy.focused().should('have.id', 'name');\ncy.get('.misc-form').find('#description').click();\ncy.focused().should('have.id', 'description');",
              "err": {},
              "uuid": "6db10ec2-45d6-4b78-a09d-54b5502926d3",
              "parentUUID": "ab1c4bc4-db3b-486b-aa76-459846f9da42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wrap() - wrap an object",
              "fullTitle": "Misc cy.wrap() - wrap an object",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/wrap\ncy.wrap({\n  foo: 'bar'\n}).should('have.property', 'foo').and('include', 'bar');",
              "err": {},
              "uuid": "99648b4d-d17b-4dd2-baeb-d7fe1945ded1",
              "parentUUID": "ab1c4bc4-db3b-486b-aa76-459846f9da42",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "161925c0-72c9-4d49-adef-36c61d7d1666",
              "title": "Cypress.Screenshot",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cy.screenshot() - take a screenshot",
                  "fullTitle": "Misc Cypress.Screenshot cy.screenshot() - take a screenshot",
                  "timedOut": null,
                  "duration": 2715,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/screenshot\ncy.screenshot('my-image');",
                  "err": {},
                  "uuid": "e67f2ab5-4fa4-48fa-a564-f73f5da2fa8c",
                  "parentUUID": "161925c0-72c9-4d49-adef-36c61d7d1666",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cypress.Screenshot.defaults() - change default config of screenshots",
                  "fullTitle": "Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots",
                  "timedOut": null,
                  "duration": 216,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Screenshot.defaults({\n  blackout: ['.foo'],\n  capture: 'viewport',\n  clip: {\n    x: 0,\n    y: 0,\n    width: 200,\n    height: 200\n  },\n  scale: false,\n  disableTimersAndAnimations: true,\n  screenshotOnRunFailure: true,\n  onBeforeScreenshot() {},\n  onAfterScreenshot() {}\n});",
                  "err": {},
                  "uuid": "8566c3e1-ff27-40c7-8d2f-c8ea92b8e18b",
                  "parentUUID": "161925c0-72c9-4d49-adef-36c61d7d1666",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e67f2ab5-4fa4-48fa-a564-f73f5da2fa8c",
                "8566c3e1-ff27-40c7-8d2f-c8ea92b8e18b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2931,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "10458a61-5622-4f62-9777-6e2b78bddc7e",
            "6db10ec2-45d6-4b78-a09d-54b5502926d3",
            "99648b4d-d17b-4dd2-baeb-d7fe1945ded1"
          ],
          "failures": [
            "830a0fcc-dc16-4919-bcef-182dcb8ee12c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2710,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c6006ae3-0a0f-45d3-a995-b4b02928d582",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/navigation.spec.js",
      "file": "cypress/integration/2-advanced-examples/navigation.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8f8d60e8-a742-4c6b-93b4-2fa3b86a2cf5",
          "title": "Navigation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.go() - go back or forward in the browser's history",
              "fullTitle": "Navigation cy.go() - go back or forward in the browser's history",
              "timedOut": null,
              "duration": 2909,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/go\ncy.location('pathname').should('include', 'navigation');\ncy.go('back');\ncy.location('pathname').should('not.include', 'navigation');\ncy.go('forward');\ncy.location('pathname').should('include', 'navigation'); // clicking back\ncy.go(-1);\ncy.location('pathname').should('not.include', 'navigation'); // clicking forward\ncy.go(1);\ncy.location('pathname').should('include', 'navigation');",
              "err": {},
              "uuid": "e4c4c302-fb53-4309-b776-ec30ef0aa7d3",
              "parentUUID": "8f8d60e8-a742-4c6b-93b4-2fa3b86a2cf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.reload() - reload the page",
              "fullTitle": "Navigation cy.reload() - reload the page",
              "timedOut": null,
              "duration": 1130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/reload\ncy.reload(); // reload the page without using the cache\ncy.reload(true);",
              "err": {},
              "uuid": "2fda8d83-e48d-45df-9e37-a0ce26277ae0",
              "parentUUID": "8f8d60e8-a742-4c6b-93b4-2fa3b86a2cf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.visit() - visit a remote url",
              "fullTitle": "Navigation cy.visit() - visit a remote url",
              "timedOut": null,
              "duration": 568,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/visit\n// Visit any sub-domain of your current domain\n// Pass options to the visit\ncy.visit('https://example.cypress.io/commands/navigation', {\n  timeout: 50000,\n  // increase total time for the visit to resolve\n  onBeforeLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect(typeof contentWindow === 'object').to.be.true;\n  },\n  onLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect(typeof contentWindow === 'object').to.be.true;\n  }\n});",
              "err": {},
              "uuid": "57ca28a1-5a19-4203-88e0-040483b50c4c",
              "parentUUID": "8f8d60e8-a742-4c6b-93b4-2fa3b86a2cf5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e4c4c302-fb53-4309-b776-ec30ef0aa7d3",
            "2fda8d83-e48d-45df-9e37-a0ce26277ae0",
            "57ca28a1-5a19-4203-88e0-040483b50c4c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4607,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2adbfe8f-7a1d-4f01-ac82-896db304f19e",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/network_requests.spec.js",
      "file": "cypress/integration/2-advanced-examples/network_requests.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0f420fa5-5ec1-4eba-ac2b-388b23fb8f0b",
          "title": "Network Requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.request() - make an XHR request",
              "fullTitle": "Network Requests cy.request() - make an XHR request",
              "timedOut": null,
              "duration": 1971,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/request\ncy.request('https://jsonplaceholder.cypress.io/comments').should(response => {\n  expect(response.status).to.eq(200); // the server sometimes gets an extra comment posted from another machine\n  // which gets returned as 1 extra object\n  expect(response.body).to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.have.property('headers');\n  expect(response).to.have.property('duration');\n});",
              "err": {},
              "uuid": "40f8b0bf-fa96-4b7d-a6be-6593c22d5e21",
              "parentUUID": "0f420fa5-5ec1-4eba-ac2b-388b23fb8f0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - verify response using BDD syntax",
              "fullTitle": "Network Requests cy.request() - verify response using BDD syntax",
              "timedOut": null,
              "duration": 1530,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://jsonplaceholder.cypress.io/comments').then(response => {\n  // https://on.cypress.io/assertions\n  expect(response).property('status').to.equal(200);\n  expect(response).property('body').to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.include.keys('headers', 'duration');\n});",
              "err": {},
              "uuid": "36824823-239e-4fad-862e-3b5f4b838bc1",
              "parentUUID": "0f420fa5-5ec1-4eba-ac2b-388b23fb8f0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() with query parameters",
              "fullTitle": "Network Requests cy.request() with query parameters",
              "timedOut": null,
              "duration": 449,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// will execute request\n// https://jsonplaceholder.cypress.io/comments?postId=1&id=3\ncy.request({\n  url: 'https://jsonplaceholder.cypress.io/comments',\n  qs: {\n    postId: 1,\n    id: 3\n  }\n}).its('body').should('be.an', 'array').and('have.length', 1).its('0') // yields first element of the array\n.should('contain', {\n  postId: 1,\n  id: 3\n});",
              "err": {},
              "uuid": "d1910ac9-00f1-4bc0-a3c9-ed31a63a6524",
              "parentUUID": "0f420fa5-5ec1-4eba-ac2b-388b23fb8f0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - pass result to the second request",
              "fullTitle": "Network Requests cy.request() - pass result to the second request",
              "timedOut": null,
              "duration": 1111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// first, let's find out the userId of the first user we have\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body') // yields the response object\n.its('0') // yields the first element of the returned list\n// the above two commands its('body').its('0')\n// can be written as its('body.0')\n// if you do not care about TypeScript checks\n.then(user => {\n  expect(user).property('id').to.be.a('number'); // make a new post on behalf of the user\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  });\n}) // note that the value here is the returned value of the 2nd request\n// which is the new post object\n.then(response => {\n  expect(response).property('status').to.equal(201); // new entity created\n  expect(response).property('body').to.contain({\n    title: 'Cypress Test Runner'\n  }); // we don't know the exact post id - only that it will be > 100\n  // since JSONPlaceholder has built-in 100 posts\n  expect(response.body).property('id').to.be.a('number').and.to.be.gt(100); // we don't know the user id here - since it was in above closure\n  // so in this test just confirm that the property is there\n  expect(response.body).property('userId').to.be.a('number');\n});",
              "err": {},
              "uuid": "3c59e6b4-e71a-4e3d-a5a8-6fa2e70e893c",
              "parentUUID": "0f420fa5-5ec1-4eba-ac2b-388b23fb8f0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - save response in the shared test context",
              "fullTitle": "Network Requests cy.request() - save response in the shared test context",
              "timedOut": null,
              "duration": 909,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/variables-and-aliases\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body').its('0') // yields the first element of the returned list\n.as('user') // saves the object in the test context\n.then(function () {\n  // NOTE 👀\n  //  By the time this callback runs the \"as('user')\" command\n  //  has saved the user object in the test context.\n  //  To access the test context we need to use\n  //  the \"function () { ... }\" callback form,\n  //  otherwise \"this\" points at a wrong or undefined object!\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: this.user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  }).its('body').as('post'); // save the new post from the response\n}).then(function () {\n  // When this callback runs, both \"cy.request\" API commands have finished\n  // and the test context has \"user\" and \"post\" objects set.\n  // Let's verify them.\n  expect(this.post, 'post has the right user id').property('userId').to.equal(this.user.id);\n});",
              "err": {},
              "uuid": "43f10ed2-aa80-42e8-aa0d-9c7f553cefb0",
              "parentUUID": "0f420fa5-5ec1-4eba-ac2b-388b23fb8f0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.intercept() - route responses to matching requests",
              "fullTitle": "Network Requests cy.intercept() - route responses to matching requests",
              "timedOut": null,
              "duration": 2305,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/intercept\nlet message = 'whoa, this comment does not exist'; // Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]); // Listen to POST to comments\ncy.intercept('POST', '**/comments').as('postComment'); // we have code that posts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-post').click();\ncy.wait('@postComment').should(({\n  request,\n  response\n}) => {\n  expect(request.body).to.include('email');\n  expect(request.headers).to.have.property('content-type');\n  expect(response && response.body).to.have.property('name', 'Using POST in cy.intercept()');\n}); // Stub a response to PUT comments/ ****\ncy.intercept({\n  method: 'PUT',\n  url: '**/comments/*'\n}, {\n  statusCode: 404,\n  body: {\n    error: message\n  },\n  headers: {\n    'access-control-allow-origin': '*'\n  },\n  delayMs: 500\n}).as('putComment'); // we have code that puts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-put').click();\ncy.wait('@putComment'); // our 404 statusCode logic in scripts.js executed\ncy.get('.network-put-comment').should('contain', message);",
              "err": {},
              "uuid": "a517d560-f58c-4475-9730-1e4930937f4b",
              "parentUUID": "0f420fa5-5ec1-4eba-ac2b-388b23fb8f0b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40f8b0bf-fa96-4b7d-a6be-6593c22d5e21",
            "36824823-239e-4fad-862e-3b5f4b838bc1",
            "d1910ac9-00f1-4bc0-a3c9-ed31a63a6524",
            "3c59e6b4-e71a-4e3d-a5a8-6fa2e70e893c",
            "43f10ed2-aa80-42e8-aa0d-9c7f553cefb0",
            "a517d560-f58c-4475-9730-1e4930937f4b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8275,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e4f5e43e-35f2-47b9-bae9-d62de7d2d10f",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/querying.spec.js",
      "file": "cypress/integration/2-advanced-examples/querying.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "39cb7da3-8386-494a-9d15-eca3ff12c29d",
          "title": "Querying",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.get() - query DOM elements",
              "fullTitle": "Querying cy.get() - query DOM elements",
              "timedOut": null,
              "duration": 986,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/get\ncy.get('#query-btn').should('contain', 'Button');\ncy.get('.query-btn').should('contain', 'Button');\ncy.get('#querying .well>button:first').should('contain', 'Button'); //              ↲\n// Use CSS selectors just like jQuery\ncy.get('[data-test-id=\"test-example\"]').should('have.class', 'example'); // 'cy.get()' yields jQuery object, you can get its attribute\n// by invoking `.attr()` method\ncy.get('[data-test-id=\"test-example\"]').invoke('attr', 'data-test-id').should('equal', 'test-example'); // or you can get element's CSS property\ncy.get('[data-test-id=\"test-example\"]').invoke('css', 'position').should('equal', 'static'); // or use assertions directly during 'cy.get()'\n// https://on.cypress.io/assertions\ncy.get('[data-test-id=\"test-example\"]').should('have.attr', 'data-test-id', 'test-example').and('have.css', 'position', 'static');",
              "err": {},
              "uuid": "db531d17-b770-4ed4-879d-58347705fece",
              "parentUUID": "39cb7da3-8386-494a-9d15-eca3ff12c29d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.contains() - query DOM elements with matching content",
              "fullTitle": "Querying cy.contains() - query DOM elements with matching content",
              "timedOut": null,
              "duration": 301,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/contains\ncy.get('.query-list').contains('bananas').should('have.class', 'third'); // we can pass a regexp to `.contains()`\ncy.get('.query-list').contains(/^b\\w+/).should('have.class', 'third');\ncy.get('.query-list').contains('apples').should('have.class', 'first'); // passing a selector to contains will\n// yield the selector containing the text\ncy.get('#querying').contains('ul', 'oranges').should('have.class', 'query-list');\ncy.get('.query-button').contains('Save Form').should('have.class', 'btn');",
              "err": {},
              "uuid": "14937cbf-3128-416f-ab6e-870b0ce3356f",
              "parentUUID": "39cb7da3-8386-494a-9d15-eca3ff12c29d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".within() - query DOM elements within a specific element",
              "fullTitle": "Querying .within() - query DOM elements within a specific element",
              "timedOut": null,
              "duration": 181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/within\ncy.get('.query-form').within(() => {\n  cy.get('input:first').should('have.attr', 'placeholder', 'Email');\n  cy.get('input:last').should('have.attr', 'placeholder', 'Password');\n});",
              "err": {},
              "uuid": "c8491dab-6732-4e67-8921-94f95ecca7e0",
              "parentUUID": "39cb7da3-8386-494a-9d15-eca3ff12c29d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.root() - query the root DOM element",
              "fullTitle": "Querying cy.root() - query the root DOM element",
              "timedOut": null,
              "duration": 246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/root\n// By default, root is the document\ncy.root().should('match', 'html');\ncy.get('.query-ul').within(() => {\n  // In this within, the root is now the ul DOM element\n  cy.root().should('have.class', 'query-ul');\n});",
              "err": {},
              "uuid": "d4562f2a-987c-495e-8685-cf6058affa72",
              "parentUUID": "39cb7da3-8386-494a-9d15-eca3ff12c29d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "best practices - selecting elements",
              "fullTitle": "Querying best practices - selecting elements",
              "timedOut": null,
              "duration": 943,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/best-practices#Selecting-Elements\ncy.get('[data-cy=best-practices-selecting-elements]').within(() => {\n  // Worst - too generic, no context\n  cy.get('button').click(); // Bad. Coupled to styling. Highly subject to change.\n  cy.get('.btn.btn-large').click(); // Average. Coupled to the `name` attribute which has HTML semantics.\n  cy.get('[name=submission]').click(); // Better. But still coupled to styling or JS event listeners.\n  cy.get('#main').click(); // Slightly better. Uses an ID but also ensures the element\n  // has an ARIA role attribute\n  cy.get('#main[role=button]').click(); // Much better. But still coupled to text content that may change.\n  cy.contains('Submit').click(); // Best. Insulated from all changes.\n  cy.get('[data-cy=submit]').click();\n});",
              "err": {},
              "uuid": "78e6fb4d-a201-4c7f-8a50-e9759396635f",
              "parentUUID": "39cb7da3-8386-494a-9d15-eca3ff12c29d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db531d17-b770-4ed4-879d-58347705fece",
            "14937cbf-3128-416f-ab6e-870b0ce3356f",
            "c8491dab-6732-4e67-8921-94f95ecca7e0",
            "d4562f2a-987c-495e-8685-cf6058affa72",
            "78e6fb4d-a201-4c7f-8a50-e9759396635f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2657,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "94bb808c-45b5-426a-8aab-f60612a543ad",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/spies_stubs_clocks.spec.js",
      "file": "cypress/integration/2-advanced-examples/spies_stubs_clocks.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6f7679bc-65e2-412f-9c48-e91088d85bec",
          "title": "Spies, Stubs, and Clock",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.spy() - wrap a method in a spy",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() - wrap a method in a spy",
              "timedOut": null,
              "duration": 1107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spy\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  foo() {}\n};\nconst spy = cy.spy(obj, 'foo').as('anyArgs');\nobj.foo();\nexpect(spy).to.be.called;",
              "err": {},
              "uuid": "709c0dbf-2069-452c-b4fb-e058f05611e7",
              "parentUUID": "6f7679bc-65e2-412f-9c48-e91088d85bec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.spy() retries until assertions pass",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() retries until assertions pass",
              "timedOut": null,
              "duration": 2521,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  /**\n   * Prints the argument passed\n   * @param x {any}\n  */\n  foo(x) {\n    console.log('obj.foo called with', x);\n  }\n};\ncy.spy(obj, 'foo').as('foo');\nsetTimeout(() => {\n  obj.foo('first');\n}, 500);\nsetTimeout(() => {\n  obj.foo('second');\n}, 2500);\ncy.get('@foo').should('have.been.calledTwice');",
              "err": {},
              "uuid": "7ad3b75c-b36b-4981-8d99-13a7972147fd",
              "parentUUID": "6f7679bc-65e2-412f-9c48-e91088d85bec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() - create a stub and/or replace a function with stub",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() - create a stub and/or replace a function with stub",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/stub\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  /**\n   * prints both arguments to the console\n   * @param a {string}\n   * @param b {string}\n  */\n  foo(a, b) {\n    console.log('a', a, 'b', b);\n  }\n};\nconst stub = cy.stub(obj, 'foo').as('foo');\nobj.foo('foo', 'bar');\nexpect(stub).to.be.called;",
              "err": {},
              "uuid": "7812594f-1e6e-46ce-8657-8d5284a58e2e",
              "parentUUID": "6f7679bc-65e2-412f-9c48-e91088d85bec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clock() - control time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.clock() - control time in the browser",
              "timedOut": null,
              "duration": 319,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clock\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nconst now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#clock-div').click().should('have.text', '1489449600');",
              "err": {},
              "uuid": "9b34f3ae-1cfd-48c5-9f07-2f4e1aa9bca0",
              "parentUUID": "6f7679bc-65e2-412f-9c48-e91088d85bec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.tick() - move time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.tick() - move time in the browser",
              "timedOut": null,
              "duration": 386,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/tick\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nconst now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#tick-div').click().should('have.text', '1489449600');\ncy.tick(10000); // 10 seconds passed\ncy.get('#tick-div').click().should('have.text', '1489449610');",
              "err": {},
              "uuid": "00ebb936-128e-4dba-bd9b-91ae267d6b4d",
              "parentUUID": "6f7679bc-65e2-412f-9c48-e91088d85bec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() matches depending on arguments",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() matches depending on arguments",
              "timedOut": null,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nconst greeter = {\n  /**\n   * Greets a person\n   * @param {string} name\n  */\n  greet(name) {\n    return `Hello, ${name}!`;\n  }\n};\ncy.stub(greeter, 'greet').callThrough() // if you want non-matched calls to call the real method\n.withArgs(Cypress.sinon.match.string).returns('Hi').withArgs(Cypress.sinon.match.number).throws(new Error('Invalid name'));\nexpect(greeter.greet('World')).to.equal('Hi'); // @ts-ignore\nexpect(() => greeter.greet(42)).to.throw('Invalid name');\nexpect(greeter.greet).to.have.been.calledTwice; // non-matched calls goes the actual method\n// @ts-ignore\nexpect(greeter.greet()).to.equal('Hello, undefined!');",
              "err": {},
              "uuid": "3cc2debf-d00f-4ea0-8cbd-c4b134ad8b35",
              "parentUUID": "6f7679bc-65e2-412f-9c48-e91088d85bec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "matches call arguments using Sinon matchers",
              "fullTitle": "Spies, Stubs, and Clock matches call arguments using Sinon matchers",
              "timedOut": null,
              "duration": 35,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nconst calculator = {\n  /**\n   * returns the sum of two arguments\n   * @param a {number}\n   * @param b {number}\n  */\n  add(a, b) {\n    return a + b;\n  }\n};\nconst spy = cy.spy(calculator, 'add').as('add');\nexpect(calculator.add(2, 3)).to.equal(5); // if we want to assert the exact values used during the call\nexpect(spy).to.be.calledWith(2, 3); // let's confirm \"add\" method was called with two numbers\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match.number); // alternatively, provide the value to match\nexpect(spy).to.be.calledWith(Cypress.sinon.match(2), Cypress.sinon.match(3)); // match any value\nexpect(spy).to.be.calledWith(Cypress.sinon.match.any, 3); // match any value from a list\nexpect(spy).to.be.calledWith(Cypress.sinon.match.in([1, 2, 3]), 3);\n/**\n * Returns true if the given number is event\n * @param {number} x\n */\nconst isEven = x => x % 2 === 0; // expect the value to pass a custom predicate function\n// the second argument to \"sinon.match(predicate, message)\" is\n// shown if the predicate does not pass and assertion fails\n\nexpect(spy).to.be.calledWith(Cypress.sinon.match(isEven, 'isEven'), 3);\n/**\n * Returns a function that checks if a given number is larger than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\nconst isGreaterThan = limit => x => x > limit;\n/**\n * Returns a function that checks if a given number is less than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\n\nconst isLessThan = limit => x => x < limit; // you can combine several matchers using \"and\", \"or\"\n\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(2), '> 2').and(Cypress.sinon.match(isLessThan(4), '< 4')));\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(200), '> 200').or(Cypress.sinon.match(3))); // matchers can be used from BDD assertions\ncy.get('@add').should('have.been.calledWith', Cypress.sinon.match.number, Cypress.sinon.match(3)); // you can alias matchers for shorter test code\nconst {\n  match: M\n} = Cypress.sinon;\ncy.get('@add').should('have.been.calledWith', M.number, M(3));",
              "err": {},
              "uuid": "00171b36-cdef-44ef-a369-b4089de2363a",
              "parentUUID": "6f7679bc-65e2-412f-9c48-e91088d85bec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "709c0dbf-2069-452c-b4fb-e058f05611e7",
            "7ad3b75c-b36b-4981-8d99-13a7972147fd",
            "7812594f-1e6e-46ce-8657-8d5284a58e2e",
            "9b34f3ae-1cfd-48c5-9f07-2f4e1aa9bca0",
            "00ebb936-128e-4dba-bd9b-91ae267d6b4d",
            "3cc2debf-d00f-4ea0-8cbd-c4b134ad8b35",
            "00171b36-cdef-44ef-a369-b4089de2363a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4545,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4250ac4b-384d-4238-8927-59957bf1f09b",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/traversal.spec.js",
      "file": "cypress/integration/2-advanced-examples/traversal.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aa811454-2828-4285-80ab-8987edb24b9e",
          "title": "Traversal",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".children() - get child DOM elements",
              "fullTitle": "Traversal .children() - get child DOM elements",
              "timedOut": null,
              "duration": 1114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/children\ncy.get('.traversal-breadcrumb').children('.active').should('contain', 'Data');",
              "err": {},
              "uuid": "db7cf7ef-275c-45b5-a401-4d0a10c2d7d7",
              "parentUUID": "aa811454-2828-4285-80ab-8987edb24b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".closest() - get closest ancestor DOM element",
              "fullTitle": "Traversal .closest() - get closest ancestor DOM element",
              "timedOut": null,
              "duration": 447,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/closest\ncy.get('.traversal-badge').closest('ul').should('have.class', 'list-group');",
              "err": {},
              "uuid": "9e058574-2ee4-42cb-8ff0-29cea24bc6ca",
              "parentUUID": "aa811454-2828-4285-80ab-8987edb24b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".eq() - get a DOM element at a specific index",
              "fullTitle": "Traversal .eq() - get a DOM element at a specific index",
              "timedOut": null,
              "duration": 223,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/eq\ncy.get('.traversal-list>li').eq(1).should('contain', 'siamese');",
              "err": {},
              "uuid": "067e6322-f6e8-42b0-b466-e814ab04b620",
              "parentUUID": "aa811454-2828-4285-80ab-8987edb24b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".filter() - get DOM elements that match the selector",
              "fullTitle": "Traversal .filter() - get DOM elements that match the selector",
              "timedOut": null,
              "duration": 221,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/filter\ncy.get('.traversal-nav>li').filter('.active').should('contain', 'About');",
              "err": {},
              "uuid": "c6f0f0b9-87dc-4be9-a9fd-714aad8e3425",
              "parentUUID": "aa811454-2828-4285-80ab-8987edb24b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".find() - get descendant DOM elements of the selector",
              "fullTitle": "Traversal .find() - get descendant DOM elements of the selector",
              "timedOut": null,
              "duration": 262,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/find\ncy.get('.traversal-pagination').find('li').find('a').should('have.length', 7);",
              "err": {},
              "uuid": "03814699-e3db-4c75-9f21-dd6d6fb3fd13",
              "parentUUID": "aa811454-2828-4285-80ab-8987edb24b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".first() - get first DOM element",
              "fullTitle": "Traversal .first() - get first DOM element",
              "timedOut": null,
              "duration": 881,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/first\ncy.get('.traversal-table td').first().should('contain', '1');",
              "err": {},
              "uuid": "0cacedb9-82ba-4afd-9b32-eb6fe2ab4fe4",
              "parentUUID": "aa811454-2828-4285-80ab-8987edb24b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".last() - get last DOM element",
              "fullTitle": "Traversal .last() - get last DOM element",
              "timedOut": null,
              "duration": 247,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/last\ncy.get('.traversal-buttons .btn').last().should('contain', 'Submit');",
              "err": {},
              "uuid": "4b47ce71-b05a-4d32-af38-40ef171276c3",
              "parentUUID": "aa811454-2828-4285-80ab-8987edb24b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".next() - get next sibling DOM element",
              "fullTitle": "Traversal .next() - get next sibling DOM element",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/next\ncy.get('.traversal-ul').contains('apples').next().should('contain', 'oranges');",
              "err": {},
              "uuid": "68cc9814-d230-49f8-9340-91160d463c87",
              "parentUUID": "aa811454-2828-4285-80ab-8987edb24b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextAll() - get all next sibling DOM elements",
              "fullTitle": "Traversal .nextAll() - get all next sibling DOM elements",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextall\ncy.get('.traversal-next-all').contains('oranges').nextAll().should('have.length', 3);",
              "err": {},
              "uuid": "7736e49f-472b-458a-9888-460470d1a9af",
              "parentUUID": "aa811454-2828-4285-80ab-8987edb24b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextUntil() - get next sibling DOM elements until next el",
              "fullTitle": "Traversal .nextUntil() - get next sibling DOM elements until next el",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextuntil\ncy.get('#veggies').nextUntil('#nuts').should('have.length', 3);",
              "err": {},
              "uuid": "96ed72a5-bbbe-4b05-afae-10e0e33b193b",
              "parentUUID": "aa811454-2828-4285-80ab-8987edb24b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".not() - remove DOM elements from set of DOM elements",
              "fullTitle": "Traversal .not() - remove DOM elements from set of DOM elements",
              "timedOut": null,
              "duration": 205,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/not\ncy.get('.traversal-disabled .btn').not('[disabled]').should('not.contain', 'Disabled');",
              "err": {},
              "uuid": "82c580ff-b8d2-490e-8d54-8c452484b84f",
              "parentUUID": "aa811454-2828-4285-80ab-8987edb24b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parent() - get parent DOM element from DOM elements",
              "fullTitle": "Traversal .parent() - get parent DOM element from DOM elements",
              "timedOut": null,
              "duration": 414,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parent\ncy.get('.traversal-mark').parent().should('contain', 'Morbi leo risus');",
              "err": {},
              "uuid": "19f82f08-af91-4d1e-b4e1-27d28ea5c30d",
              "parentUUID": "aa811454-2828-4285-80ab-8987edb24b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parents() - get parent DOM elements from DOM elements",
              "fullTitle": "Traversal .parents() - get parent DOM elements from DOM elements",
              "timedOut": null,
              "duration": 413,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parents\ncy.get('.traversal-cite').parents().should('match', 'blockquote');",
              "err": {},
              "uuid": "469509be-5245-441e-9cf3-dbe04682e44b",
              "parentUUID": "aa811454-2828-4285-80ab-8987edb24b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parentsUntil() - get parent DOM elements from DOM elements until el",
              "fullTitle": "Traversal .parentsUntil() - get parent DOM elements from DOM elements until el",
              "timedOut": null,
              "duration": 215,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parentsuntil\ncy.get('.clothes-nav').find('.active').parentsUntil('.clothes-nav').should('have.length', 2);",
              "err": {},
              "uuid": "048d7568-2cfb-4849-92bc-2f06740d1ed2",
              "parentUUID": "aa811454-2828-4285-80ab-8987edb24b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prev() - get previous sibling DOM element",
              "fullTitle": "Traversal .prev() - get previous sibling DOM element",
              "timedOut": null,
              "duration": 224,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prev\ncy.get('.birds').find('.active').prev().should('contain', 'Lorikeets');",
              "err": {},
              "uuid": "a19a7b5d-1f9c-44cd-9852-ff038455bda5",
              "parentUUID": "aa811454-2828-4285-80ab-8987edb24b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevAll() - get all previous sibling DOM elements",
              "fullTitle": "Traversal .prevAll() - get all previous sibling DOM elements",
              "timedOut": null,
              "duration": 927,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevall\ncy.get('.fruits-list').find('.third').prevAll().should('have.length', 2);",
              "err": {},
              "uuid": "03e5cd03-f4e4-403e-b405-1ced082c28d5",
              "parentUUID": "aa811454-2828-4285-80ab-8987edb24b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevUntil() - get all previous sibling DOM elements until el",
              "fullTitle": "Traversal .prevUntil() - get all previous sibling DOM elements until el",
              "timedOut": null,
              "duration": 259,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevuntil\ncy.get('.foods-list').find('#nuts').prevUntil('#veggies').should('have.length', 3);",
              "err": {},
              "uuid": "d4701be4-5e10-49bb-b659-8fb43f2e9fb9",
              "parentUUID": "aa811454-2828-4285-80ab-8987edb24b9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".siblings() - get all sibling DOM elements",
              "fullTitle": "Traversal .siblings() - get all sibling DOM elements",
              "timedOut": null,
              "duration": 591,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/siblings\ncy.get('.traversal-pills .active').siblings().should('have.length', 2);",
              "err": {},
              "uuid": "c178f384-329d-4ba2-ad01-bad17ced0d2d",
              "parentUUID": "aa811454-2828-4285-80ab-8987edb24b9e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db7cf7ef-275c-45b5-a401-4d0a10c2d7d7",
            "9e058574-2ee4-42cb-8ff0-29cea24bc6ca",
            "067e6322-f6e8-42b0-b466-e814ab04b620",
            "c6f0f0b9-87dc-4be9-a9fd-714aad8e3425",
            "03814699-e3db-4c75-9f21-dd6d6fb3fd13",
            "0cacedb9-82ba-4afd-9b32-eb6fe2ab4fe4",
            "4b47ce71-b05a-4d32-af38-40ef171276c3",
            "68cc9814-d230-49f8-9340-91160d463c87",
            "7736e49f-472b-458a-9888-460470d1a9af",
            "96ed72a5-bbbe-4b05-afae-10e0e33b193b",
            "82c580ff-b8d2-490e-8d54-8c452484b84f",
            "19f82f08-af91-4d1e-b4e1-27d28ea5c30d",
            "469509be-5245-441e-9cf3-dbe04682e44b",
            "048d7568-2cfb-4849-92bc-2f06740d1ed2",
            "a19a7b5d-1f9c-44cd-9852-ff038455bda5",
            "03e5cd03-f4e4-403e-b405-1ced082c28d5",
            "d4701be4-5e10-49bb-b659-8fb43f2e9fb9",
            "c178f384-329d-4ba2-ad01-bad17ced0d2d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7206,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6633327c-381c-4216-9f84-7d187207d11a",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/utilities.spec.js",
      "file": "cypress/integration/2-advanced-examples/utilities.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cf6f9be0-f0f3-44da-865f-6a5a5b29d594",
          "title": "Utilities",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cypress._ - call a lodash method",
              "fullTitle": "Utilities Cypress._ - call a lodash method",
              "timedOut": null,
              "duration": 1831,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/_\ncy.request('https://jsonplaceholder.cypress.io/users').then(response => {\n  let ids = Cypress._.chain(response.body).map('id').take(3).value();\n  expect(ids).to.deep.eq([1, 2, 3]);\n});",
              "err": {},
              "uuid": "a0930090-762b-42fd-97d9-0040bd4e4c61",
              "parentUUID": "cf6f9be0-f0f3-44da-865f-6a5a5b29d594",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.$ - call a jQuery method",
              "fullTitle": "Utilities Cypress.$ - call a jQuery method",
              "timedOut": null,
              "duration": 341,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/$\nlet $li = Cypress.$('.utility-jquery li:first');\ncy.wrap($li).should('not.have.class', 'active').click().should('have.class', 'active');",
              "err": {},
              "uuid": "0ad89757-042b-43dd-aa59-b72a5e76d072",
              "parentUUID": "cf6f9be0-f0f3-44da-865f-6a5a5b29d594",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Blob - blob utilities and base64 string conversion",
              "fullTitle": "Utilities Cypress.Blob - blob utilities and base64 string conversion",
              "timedOut": null,
              "duration": 673,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blob\ncy.get('.utility-blob').then($div => {\n  // https://github.com/nolanlawson/blob-util#imgSrcToDataURL\n  // get the dataUrl string for the javascript-logo\n  return Cypress.Blob.imgSrcToDataURL('https://example.cypress.io/assets/img/javascript-logo.png', undefined, 'anonymous').then(dataUrl => {\n    // create an <img> element and set its src to the dataUrl\n    let img = Cypress.$('<img />', {\n      src: dataUrl\n    }); // need to explicitly return cy here since we are initially returning\n    // the Cypress.Blob.imgSrcToDataURL promise to our test\n    // append the image\n    $div.append(img);\n    cy.get('.utility-blob img').click().should('have.attr', 'src', dataUrl);\n  });\n});",
              "err": {},
              "uuid": "7140fa32-eb2a-4dca-bd16-955dc1bf0d52",
              "parentUUID": "cf6f9be0-f0f3-44da-865f-6a5a5b29d594",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.minimatch - test out glob patterns against strings",
              "fullTitle": "Utilities Cypress.minimatch - test out glob patterns against strings",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/minimatch\nlet matching = Cypress.minimatch('/users/1/comments', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'matching wildcard').to.be.true;\nmatching = Cypress.minimatch('/users/1/comments/2', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be.false; // ** matches against all downstream path segments\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/**', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be.true; // whereas * matches only the next path segment\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/*', {\n  matchBase: false\n});\nexpect(matching, 'comments').to.be.false;",
              "err": {},
              "uuid": "abbb483b-a8d4-4ace-af2c-d99bb59c39cf",
              "parentUUID": "cf6f9be0-f0f3-44da-865f-6a5a5b29d594",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Promise - instantiate a bluebird promise",
              "fullTitle": "Utilities Cypress.Promise - instantiate a bluebird promise",
              "timedOut": null,
              "duration": 1161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/promise\nlet waited = false;\n/**\n * @return Bluebird<string>\n */\nfunction waitOneSecond() {\n  // return a promise that resolves after 1 second\n  // @ts-ignore TS2351 (new Cypress.Promise)\n  return new Cypress.Promise((resolve, reject) => {\n    setTimeout(() => {\n      // set waited to true\n      waited = true; // resolve with 'foo' string\n      resolve('foo');\n    }, 1000);\n  });\n}\ncy.then(() => {\n  // return a promise to cy.then() that\n  // is awaited until it resolves\n  // @ts-ignore TS7006\n  return waitOneSecond().then(str => {\n    expect(str).to.eq('foo');\n    expect(waited).to.be.true;\n  });\n});",
              "err": {},
              "uuid": "6559f291-16d1-4ae5-b7af-fc730fbe44d4",
              "parentUUID": "cf6f9be0-f0f3-44da-865f-6a5a5b29d594",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a0930090-762b-42fd-97d9-0040bd4e4c61",
            "0ad89757-042b-43dd-aa59-b72a5e76d072",
            "7140fa32-eb2a-4dca-bd16-955dc1bf0d52",
            "abbb483b-a8d4-4ace-af2c-d99bb59c39cf",
            "6559f291-16d1-4ae5-b7af-fc730fbe44d4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4158,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b2ad931c-7a69-4c69-b9f0-d060361d3328",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/viewport.spec.js",
      "file": "cypress/integration/2-advanced-examples/viewport.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a86a6ab8-fce2-47ab-83e6-a920dc6d0397",
          "title": "Viewport",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.viewport() - set the viewport size and dimension",
              "fullTitle": "Viewport cy.viewport() - set the viewport size and dimension",
              "timedOut": null,
              "duration": 4904,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/viewport\ncy.get('#navbar').should('be.visible');\ncy.viewport(320, 480); // the navbar should have collapse since our screen is smaller\ncy.get('#navbar').should('not.be.visible');\ncy.get('.navbar-toggle').should('be.visible').click();\ncy.get('.nav').find('a').should('be.visible'); // lets see what our app looks like on a super large screen\ncy.viewport(2999, 2999); // cy.viewport() accepts a set of preset sizes\n// to easily set the screen to a device's width and height\n// We added a cy.wait() between each viewport change so you can see\n// the change otherwise it is a little too fast to see :)\ncy.viewport('macbook-15');\ncy.wait(200);\ncy.viewport('macbook-13');\ncy.wait(200);\ncy.viewport('macbook-11');\ncy.wait(200);\ncy.viewport('ipad-2');\ncy.wait(200);\ncy.viewport('ipad-mini');\ncy.wait(200);\ncy.viewport('iphone-6+');\ncy.wait(200);\ncy.viewport('iphone-6');\ncy.wait(200);\ncy.viewport('iphone-5');\ncy.wait(200);\ncy.viewport('iphone-4');\ncy.wait(200);\ncy.viewport('iphone-3');\ncy.wait(200); // cy.viewport() accepts an orientation for all presets\n// the default orientation is 'portrait'\ncy.viewport('ipad-2', 'portrait');\ncy.wait(200);\ncy.viewport('iphone-4', 'landscape');\ncy.wait(200); // The viewport will be reset back to the default dimensions\n// in between tests (the  default can be set in cypress.json)",
              "err": {},
              "uuid": "dfa6bb11-cc86-4d4d-80f9-c4b6043d98be",
              "parentUUID": "a86a6ab8-fce2-47ab-83e6-a920dc6d0397",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dfa6bb11-cc86-4d4d-80f9-c4b6043d98be"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4904,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "08af58dd-c39f-4234-8eab-1cf09891eb16",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/waiting.spec.js",
      "file": "cypress/integration/2-advanced-examples/waiting.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a27984bc-a7c8-43bd-9840-dbba645c7070",
          "title": "Waiting",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.wait() - wait for a specific amount of time",
              "fullTitle": "Waiting cy.wait() - wait for a specific amount of time",
              "timedOut": null,
              "duration": 8557,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wait-input1').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input2').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input3').type('Wait 1000ms after typing');\ncy.wait(1000);",
              "err": {},
              "uuid": "67a93ebf-b830-4bf4-8791-c41328433c1e",
              "parentUUID": "a27984bc-a7c8-43bd-9840-dbba645c7070",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wait() - wait for a specific route",
              "fullTitle": "Waiting cy.wait() - wait for a specific route",
              "timedOut": null,
              "duration": 1479,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // wait for GET comments/1\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]);",
              "err": {},
              "uuid": "143c72a6-f848-4ffe-acdc-4c6507adbea6",
              "parentUUID": "a27984bc-a7c8-43bd-9840-dbba645c7070",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "67a93ebf-b830-4bf4-8791-c41328433c1e",
            "143c72a6-f848-4ffe-acdc-4c6507adbea6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10036,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "10cb435d-12af-4f7a-9e4c-ca3bf1d39b01",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/window.spec.js",
      "file": "cypress/integration/2-advanced-examples/window.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d3ec2e83-737a-4d68-86fc-e0cac98d482b",
          "title": "Window",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.window() - get the global window object",
              "fullTitle": "Window cy.window() - get the global window object",
              "timedOut": null,
              "duration": 972,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/window\ncy.window().should('have.property', 'top');",
              "err": {},
              "uuid": "7371ae95-a437-4dd7-9dd7-7f3567a50d77",
              "parentUUID": "d3ec2e83-737a-4d68-86fc-e0cac98d482b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.document() - get the document object",
              "fullTitle": "Window cy.document() - get the document object",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/document\ncy.document().should('have.property', 'charset').and('eq', 'UTF-8');",
              "err": {},
              "uuid": "31a7a857-8d6d-4a61-a404-9eac2919849c",
              "parentUUID": "d3ec2e83-737a-4d68-86fc-e0cac98d482b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.title() - get the title",
              "fullTitle": "Window cy.title() - get the title",
              "timedOut": null,
              "duration": 181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/title\ncy.title().should('include', 'Kitchen Sink');",
              "err": {},
              "uuid": "5d3ee86f-fd7f-410d-8523-2536bb32e807",
              "parentUUID": "d3ec2e83-737a-4d68-86fc-e0cac98d482b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7371ae95-a437-4dd7-9dd7-7f3567a50d77",
            "31a7a857-8d6d-4a61-a404-9eac2919849c",
            "5d3ee86f-fd7f-410d-8523-2536bb32e807"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1354,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e534d25a-2bc3-4977-943b-5786c99fc021",
      "title": "",
      "fullFile": "cypress/integration/sample_spec.ts",
      "file": "cypress/integration/sample_spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e410e704-12f1-4385-9b58-4988fbb0f797",
          "title": "My First Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Visits the Kitchen Sink",
              "fullTitle": "My First Test Visits the Kitchen Sink",
              "timedOut": null,
              "duration": 945,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://apps.datev.de/dcal');\n//cy.get('[name=\"Start\"]').click()",
              "err": {},
              "uuid": "82910e7a-d303-488f-b1e7-c47ce917675a",
              "parentUUID": "e410e704-12f1-4385-9b58-4988fbb0f797",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "82910e7a-d303-488f-b1e7-c47ce917675a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 945,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}